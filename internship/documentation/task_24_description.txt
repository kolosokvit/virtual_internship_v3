**Контекст задачи (краткое описание) **
Паттерн Inversion of Control (IoC)

**Что было сделано и как? (краткое описание)**
Способы внедрения зависимостей:
1) через конструктор:
+ безопасный код (создаются корректные объекты), проще тестировать используя моки;
- нужно писать больше кода (Lombok помогает уменьшить)
2) через поля класса:
+ нужно писать меньше кода;
- небезопасный код (NullPointerException при создании некорректных объектов), сложнее тестировать;
3) через сеттеры:
+ может быть полезным, когда нет возможности изменить существующий конструктор или объекту нужны дополнительные свойства
- может вызывать неправильное функционирование объекта, если его методы вызываются раньше, чем установлены зависимости, сложное восприятие зависимостей в коде.

**Зачем это было сделано? Чему научился в процессе выполнения задания?**
IoC - это принцип написания слабо связанного кода (код чище, легче тестируется и поддерживается).
Наиболее распространенный подход для этого - Dependency Injection (DI).
При таком подходе требуемые зависимости внедряются в объект, а не сам объект создает их. Внедрение зависимостей выполняет
контейнер (Spring).

**Сколько потратил времени на выполнение задачи?**
60 мин

**Заметки, идеи, предложения в свободной форме**
